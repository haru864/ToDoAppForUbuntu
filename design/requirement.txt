タスクごとに時間を設定することで、生産性の向上を図る。

タスクごとに制限時間を設定して、時間経過で通知をデスクトップに表示する。
音も鳴るようにする。

タスクにタイプを設けて、過去に同様のタイプのタスクに設定した時間と
投入した時間から、予測を立てて見込み時間を提案できるようにする。

アイコンからアプリを起動できるようにする。

language: Python
GUI lib: Tkinter

# タスク時間の予測
重回帰分析を使う
目的変数：
    タスク実行時間
説明変数：
    難易度
        1~10段階で記録
    実行時間(過去に同じ種別、難易度のタスクをどれくらい経験したか)
        秒単位で記録

# todo.db
task_info
タスク名        TEXT        PK
登録日時(UT)    TEXT        PK
タイプID        INTEGER     PK, 外部参照
完了フラグ      INTEGER
難易度          INTEGER
総経過時間(秒)  INTEGER
残り時間        INTEGER

CREATE TABLE task_info (
    task_name TEXT,
    registered_at TEXT,
    task_type_id INTEGER,
    is_completed INTEGER,
    difficulty INTEGER,
    total_elapsed_time_seconds INTEGER,
    remaining_time_seconds INTEGER,
    PRIMARY KEY (task_name, registered_at, task_type_id),
    FOREIGN KEY (task_type_id) REFERENCES task_type(task_type_id) ON DELETE CASCADE
);

task_type
タイプID    INTGER  PK
タイプ名    TEXT    UNIQUE

CREATE TABLE task_type (
    task_type_id INTEGER PRIMARY KEY,
    task_type_name TEXT UNIQUE
);
